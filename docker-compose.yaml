
services:

  # üêò PostgreSQL
  postgres:
    image: postgres:16
    container_name: finemeet_postgres_container
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - finemeet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üß† Redis (for caching)
  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - finemeet-network
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üõ†Ô∏è pgAdmin (optional)
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@finemeet.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - finemeet-network

  # üßë‚Äçüíª User Service
#  user-service:
#    image: user-service:latest
#    container_name: user-service
#    build:
#      context: ./user-service
#      dockerfile: Dockerfile
#    ports:
#      - "${USER_SERVICE_SERVER_PORT}:${USER_SERVICE_SERVER_PORT}"
#    environment:
#      # App profile
#      - SPRING_PROFILES_ACTIVE=${USER_SERVICE_SPRING_PROFILES_ACTIVE}
#      - USER_SERVICE_SERVER_PORT=${USER_SERVICE_SERVER_PORT}
#      # DB config
#      - DB_HOST=${DB_HOST}
#      - DB_PORT=${DB_PORT}
#      - DB_USERNAME=${DB_USERNAME}
#      - DB_PASSWORD=${DB_PASSWORD}
#      - DB_NAME=${USER_SERVICE_DATABASE_NAME}
#      # Redis config
#      - REDIS_HOST=${REDIS_HOST}
#      - REDIS_PORT=${REDIS_PORT}
#    depends_on:
#      postgres:
#        condition: service_healthy
#    healthcheck:
#      test: [ "CMD-SHELL", "curl -f http://localhost:1113/actuator/health || exit 1" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#    volumes:
#      - user-service-maven-cache:/root/.m2
#    networks:
#      - finemeet-network

networks:
  finemeet-network:
    driver: bridge

volumes:
#  user-service-maven-cache:
  pgdata:
  redisdata:
