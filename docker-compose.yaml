
services:

  # üêò PostgreSQL
  postgres:
    image: postgres:16
    container_name: finemeet_postgres_container
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - finemeet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üß† Redis (for caching)
  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - finemeet-network
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üõ†Ô∏è pgAdmin (optional)
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@finemeet.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - finemeet-network

  # üöÄ Kafka (KRaft mode, no Zookeeper)
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"     # Internal communication
      - "29092:29092"   # External communication
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,INTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM6Qk  # Example; can be anything (generated once)
    volumes:
      - kafka-data:/tmp/kraft-combined-logs
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/29092"]
      interval: 10s
      timeout: 5s
      retries: 10

  # üß© Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "9090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: LocalKafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: ""  # Not needed in KRaft mode
    depends_on:
      - kafka
    networks:
      - kafka-network

  # üõ†Ô∏è Kafka CLI (for debugging)
  kafka-cli:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka-cli
    entrypoint: ["sleep", "infinity"]
    depends_on:
      - kafka
    networks:
      - kafka-network

networks:
  finemeet-network:
    driver: bridge
  kafka-network:
    driver: bridge

volumes:
#  user-service-maven-cache:
  pgdata:
  redisdata:
  kafka-data: